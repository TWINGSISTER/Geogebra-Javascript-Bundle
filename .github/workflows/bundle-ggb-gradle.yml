# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle GGB Bundle

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  schedule:
    # * is a special character in YAML so you have to quote this string
    - cron:  '0 0 1 * *'
    # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
env:
  CPY: './copydir'

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: get tag
      id: ggb  # The step ID to refer to later.
      uses: oprypin/find-latest-tag@v1
      with:
        repository: geogebra/geogebra  # The repository to scan.
    - name: Fetch tag for latest release version
      id: lastrelease
      run: |
        curl -sL https://api.github.com/repos/TWINGSISTER/Geogebra-Javascript-Bundle/releases/latest | \
        jq -r ".tag_name"> releasetag
        echo ::set-output name=TAGNAME::$(cat releasetag)
        echo ::set-output name=NEWTAGNAME::$(echo ${{ steps.ggb.outputs.tag }}  | sed 's/\./-/g') 
        echo "::debug::{$TAGNAME}"
        echo "::debug::{$NEWTAGNAME}"
    - name: bail out?
      if:  steps.lastrelease.outputs.TAGNAME == steps.ggb.outputs.tag 
      run: exit 1

    - name: stop
      uses: mxschmitt/action-tmate@v3   
