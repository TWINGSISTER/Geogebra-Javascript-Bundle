name: Get latest release version
on:
  schedule:
    - cron:  '0 10 * * *' #'*/1 * * * *' #
  push:
    branches: [ master ]
#env:
#      SUPER_SECRET: ${{ secrets.REPO_SCOPED_TOKEN}}
jobs:
   get-version:
    runs-on: ubuntu-latest
    steps:
    - name: get tag
      id: ggb  # The step ID to refer to later.
      uses: oprypin/find-latest-tag@v1
      with:
        repository: geogebra/geogebra  # The repository to scan.
      #  releases-only: true  # We know that all relevant tags have a GitHub release for them.
    - name: show res 
      run:  |
        echo "ggb is at version ${{ steps.ggb.outputs.tag }}"
#        echo "ggb is at version ${{ steps.ggb.outputs.tag }}" >foo
    - name: Get a persistent value
      id: get_persistent_value
      uses: aaimio/get-persistent-value@v1
      with:
        key: foo
        access_token: ${{ secrets.PERSISTENT_VALUE_ACCESS_TOKEN }}
    - name: Some other step
      run: |
        echo ${{ steps.get_persistent_value.outputs.value }}
    - name: Set a persistent value
      if: steps.get_persistent_value.outputs.value != steps.ggb.outputs.tag 
      id: set_persistent_value
      uses: aaimio/set-persistent-value@v1
      with:
       key: foo
       value: ${{ steps.ggb.outputs.tag }}
       access_token: ${{ secrets.PERSISTENT_VALUE_ACCESS_TOKEN }}
#    - name: Setup tmate sessions
#      uses: mxschmitt/action-tmate@v3   
#    - name: checkout
#      uses: actions/checkout@v2
#      with:
#       token: ${{ env.SUPER_SECRET}}
#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
 #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
#https://web.archive.org/web/20210701153153if_/https://docs.github.com/en/github/authenticating-to-github/keeping-your-account-and-data-secure/creating-a-personal-access-token

    - name: Setup tmate sessions
      uses: mxschmitt/action-tmate@v3   

#    - name: Fetch release version
#      run: |
#          curl -sL https://api.github.com/repos/TWINGSISTER/Geogebra-Javascript-Bundle/releases/latest | \
#          jq -r ".tag_name" > release-versions/bundle-latest.txt
#    - name: Check for modified files
#      id: git-check
#      run: echo ::set-output name=modified::$([ -z "`git status --porcelain`" ] && echo "false" || echo "true")
#    - name: Commit latest release version
      if: steps.get_persistent_value.outputs.value != steps.ggb.outputs.tag 
      run: |
          git config --global user.name 'twingsister'
          git config --global user.email 'twingsister@users.noreply.github.com'
          git commit -am "New release version"
          git push
    - name: Setup tmate sessions
      uses: mxschmitt/action-tmate@v3   